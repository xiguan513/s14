装饰器：
    定义：本质函数，功能装饰其他函数（为其他函数添加附加功能）
    原则: 1.不能修改被装饰的函数的源代码
          2.不能修改被装饰函数的调用方式
          （装饰器对被装饰函数完全透明）

    实现装饰器知识储备：
    1. 函数即变量
    2. 高阶函数
        a:把一个函数体作为实参传给另个函数
        b:返回值中包涵函数体
    3. 嵌套函数

http://www.cnblogs.com/alex3714/articles/5765046.html
迭代器&生成器

    生成器:只有在调用时才会生产相应的数据
           只记录当前位置，只有一个__next__()方法，2.7里面next()

           >>> g=(i+1 for i in range(0,10))
            >>> g
            <generator object <genexpr> at 0x03DE7B70>
            >>> type(g)
            <class 'generator'>
            >>> g.__next__()
            1
            >>> g.__next__()
            2
            >>> g.__next__()
            3

     def fib(max):
        n,a,b=0,0,1
        while n < max:
            #print(b)
            yield b#中断程序直接返回值，并保存函数当前运行状态，提供函数返回点
            a,b=b,a+b
            n+=1
        return 'done'

    b=fib(10)

    # print(b.__next__())
    # print(b.__next__())
    # print(b.__next__())


    #next: 只调用yield，不给yield传值，并恢复生成器
    #send: 调用yield的同时给yield传值，并恢复生成器

     迭代器


序列化json&pickle





