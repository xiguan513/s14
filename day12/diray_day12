orm
    sqlalchemy

 隐藏数据访问细节，封闭的通用数据库交互


select_data 查询
update_data 更新
create_table 创建表
insert_data 插入
rollback 回滚
count_data 统计分组
join_data链表查询


mysql 事物
    一个事务是一个连续的一组数据库操作，就好像它是一个单一的工作单元进行。换言之，永远不会是完整的事务，除非该组内的每个单独的操作是成功的。如果在事务的任何操作失败，则整个事务将失败。
实际上，会俱乐部许多SQL查询到一个组中，将执行所有的人都一起作为事务的一部分。

事务的特性：
事务有以下四个标准属性的缩写ACID，通常被称为：

原子性: 确保工作单元内的所有操作都成功完成，否则事务将被中止在故障点，和以前的操作将回滚到以前的状态。

一致性: 确保数据库正确地改变状态后，成功提交的事务。

隔离性: 使事务操作彼此独立的和透明的。

持久性: 确保提交的事务的结果或效果的系统出现故障的情况下仍然存在。

在MySQL中，事务开始使用COMMIT或ROLLBACK语句开始工作和结束。开始和结束语句的SQL命令之间形成了大量的事务。

COMMIT & ROLLBACK:
这两个关键字提交和回滚主要用于MySQL的事务。

当一个成功的事务完成后，发出COMMIT命令应使所有参与表的更改才会生效。

如果发生故障时，应发出一个ROLLBACK命令返回的事务中引用的每一个表到以前的状态。

可以控制的事务行为称为AUTOCOMMIT设置会话变量。如果AUTOCOMMIT设置为1（默认值），然后每一个SQL语句（在事务与否）被认为是一个完整的事务，并承诺在默认情况下，当它完成。 AUTOCOMMIT设置为0时，发出SET AUTOCOMMIT =0命令，在随后的一系列语句的作用就像一个事务，直到一个明确的COMMIT语句时，没有活动的提交。

可以通过使用mysql_query()函数在PHP中执行这些SQL命令。

通用事务例子
这一系列事件是独立于所使用的编程语言，可以建立在任何使用的语言来创建应用程序的逻辑路径。
可以通过使用mysql_query()函数在PHP中执行这些SQL命令。


BEGIN WORK开始事务发出SQL命令

发出一个或多个SQL命令，如SELECT，INSERT，UPDATE或DELETE

检查是否有任何错误，一切都依据的需要。

如果有任何错误，那么问题ROLLBACK命令，否则发出COMMIT命令。

在MySQL中的事务安全表类型：

如果打算使用MySQL事务编程，那么就需要一种特殊的方式创建表。有很多支持事务但最流行的是InnoDB表类型。

从源代码编译MySQL时，InnoDB表支持需要特定的编译参数。如果MySQL版本没有InnoDB支持，请互联网服务提供商建立一个版本的MySQL支持InnoDB表类型，或者下载并安装Windows或Linux/UNIX的MySQL-Max二进制分发和使用的表类型在开发环境中。
如果MySQL安装支持InnoDB表，只需添加一个的TYPE=InnoDB 定义表创建语句。


http://www.cnblogs.com/wupeiqi/articles/5713330.html

http://www.cnblogs.com/alex3714/articles/5978329.html

